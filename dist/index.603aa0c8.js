const e=[{description:"Buy a frame for a picture",completed:0,dateTaskCreated:1679836195906,deadline:16878708e5},{completed:0,dateTaskCreated:1679836120215,deadline:16819992e5,description:"Register for the doctor appointment",timeLeft:2163079785},{description:"Buy food for dog",dateTaskCreated:1679836049730,deadline:16804404e5,timeLeft:604279785},{description:"Wash my car",dateTaskCreated:1679836017465,deadline:16798572e5,completed:0,timeLeft:21079785}],t=(document.querySelector(".form"),document.querySelector(".list")),s=document.querySelector(".form__input--description"),i=document.querySelector(".form__input--time"),a=document.querySelector(".add__btn"),d=document.querySelector(".sort__byDate"),n=document.querySelector(".sort__byCompleted"),o=document.querySelector(".sort__byTimeLeft");class r{description;dateTaskCreated;deadline=null;timeLeft;completed=0;constructor(e,t,s=null){this.description=e,this.deadline=s,this.dateTaskCreated=t}}new class{list=[];dateNow;constructor(){sessionStorage.setItem("tasks",JSON.stringify(e)),this.dateNow=Date.now(),a.addEventListener("click",this.addTask.bind(this)),this.getSessionStorage(),this.updateList(this.list),d.addEventListener("click",this.sortByDate.bind(this)),n.addEventListener("click",this.sortByCompleted.bind(this)),o.addEventListener("click",this.sortByTimeLeft.bind(this))}addTask(e){e.preventDefault();const t=s.value,a=i.value;let d;d=a?Number(new Date(a)):1/0;const n=Date.now();if(this.validateInput(t,d,n)){{let e=new r(t,n,d);const s=[...this.list,e];this.updateList(s)}s.value="",i.value=""}}deleteTask(e){e.preventDefault();if(0==confirm("Are you sure you want to delete this task?"))return;const t=e.target.attributes.data.value,s=this.list?.filter((e=>+e.dateTaskCreated!=+t));this.updateList(s)}completeTask(e){e.preventDefault();const t=e.target.attributes.data.value,s=this.list.map((e=>+e.dateTaskCreated==+t?{...e,completed:!0}:{...e}));this.updateList(s)}renderTasks(e){let s="";for(let t of e){const e=t?.completed?"completed__true":"completed__false",i=t?.completed?"check":"";let a;a=t.timeLeft!==1/0?this.calcTimeLeft(Math.round(t.timeLeft)):"",s+=`\n      <li class="single__task ">\n      <div class="single__task__info ${e}">\n        <div class="description">${t.description}</div>\n        <div>${a}</div>\n      </div>\n        <div class="single__task__btns">\n          \n          <button class="delete__btn" data=${t.dateTaskCreated} >Delete\n          </button>\n          <div class="check-container complete__btn" >\n            <input   type="checkbox" dateTaskCreated="done" name="done" />\n            <span class="checkmark ${i}" data=${t.dateTaskCreated}></span>\n          </div>\n        </div>\n      </li> \n      `}t.innerHTML=s}getSessionStorage(){const e=JSON.parse(sessionStorage.getItem("tasks"));if(e){for(let t of e)t.deadline!==1/0&&null!==t.deadline?t.timeLeft=t.deadline-Date.now():t.timeLeft=1/0;this.list=e}}updateList(e){sessionStorage.setItem("tasks",JSON.stringify(e)),this.getSessionStorage(),this.renderTasks(this.list);const t=document.querySelectorAll(".complete__btn"),s=document.querySelectorAll(".delete__btn");t.forEach((e=>e.addEventListener("click",this.completeTask.bind(this)))),s.forEach((e=>e.addEventListener("click",this.deleteTask.bind(this))))}sortByDate(){const e=this.list.sort(((e,t)=>t.dateTaskCreated-e.dateTaskCreated));this.updateList(e)}sortByCompleted(){const e=this.list.sort(((e,t)=>t.completed-e.completed));this.updateList(e)}sortByTimeLeft(){const e=this.list.sort(((e,t)=>e.timeLeft-t.timeLeft));this.updateList(e)}validateInput(e,t,s){return e.length<1?(alert("Task can't be empty!"),!1):e.length>160?(alert("Task can't be longer than 160 symbols"),!1):!(t<s&&t!==1/0)||(alert("Deadline can't be set for past time"),!1)}calcTimeLeft(e){return e/864e5>31?`Time left: ${Math.round(e/26784e5)} months`:e/36e5>24?`Time left: ${Math.round(e/864e5)} days`:e/36e5>1?`Time left: ${Math.round(e/36e5)} hours`:`Time left: ${Math.round(e/6e4)} minutes`}};
//# sourceMappingURL=index.603aa0c8.js.map
